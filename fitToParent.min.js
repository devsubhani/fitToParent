"use strict";var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var fitToParent=function fitToParent(){var ops=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var el=ops.nodeName?ops:ops.element;var sizeParent={},elHeight=void 0,elWidth=void 0;if(el){elHeight=el.getAttribute("height")||el.style.height||el.offsetHeight;elWidth=el.getAttribute("width")||el.style.width||el.offsetWidth;var closestSizeParent=function(el){do{if(el.classList.contains("size-parent"))return el}while(el=el&&el.parentNode)}(el);sizeParent=closestSizeParent||el.parentNode}var settings=_extends({heightOffset:0,widthOffset:0,parentHeight:sizeParent.offsetHeight,parentWidth:sizeParent.offsetWidth,callback:null,ratio:null,upres:true,elHeight:elHeight,elWidth:elWidth},ops);var stage={height:settings.parentHeight-settings.heightOffset,width:settings.parentWidth-settings.widthOffset};if(!settings.upres){stage.height=Math.min(stage.height,settings.elHeight);stage.width=Math.min(stage.width,settings.elWidth)}var aspect=settings.ratio;if(el&&el.dataset["aspect"]){aspect=aspect||el.dataset["aspect"]}else{aspect=aspect||settings.elWidth/settings.elHeight;if(el)el.dataset["aspect"]=aspect}if(!settings.parentHeight||!settings.parentWidth||!aspect)throw new Error("Not enough info for fitToParent to calculate.");var stageAspect=stage.width/stage.height;var newWidth=void 0,newHeight=void 0;if(aspect>stageAspect){newWidth=stage.width;newHeight=newWidth/aspect}else{newHeight=stage.height;newWidth=newHeight*aspect}if(el){el.style.width=newWidth+"px";el.style.height=newHeight+"px"}if(typeof settings.callback=="function"){settings.callback.call(el,[newWidth,newHeight])}return[newWidth,newHeight]};var hasWindow=function hasWindow(){try{return window}catch(e){return false}};if(!hasWindow()){module.exports=fitToParent}else{var $=window.jQuery||window.Zepto;if($){$.fn.fitToParent=function(ops){this.each(function(){fitToParent(_extends({element:this},ops));return this})}}else{window.fitToParent=fitToParent}}